"use strict";(self.webpackChunkenchird_wiki=self.webpackChunkenchird_wiki||[]).push([[376],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7561:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},assets:function(){return p},toc:function(){return u},default:function(){return m}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={sidebar_position:2},c="Quick Start",l={unversionedId:"nudle/quick-start",id:"nudle/quick-start",title:"Quick Start",description:"This project is built with vue.js@2.5.16, Electron.js@4.2.12 and",source:"@site/docs/nudle/quick-start.md",sourceDirName:"nudle",slug:"/nudle/quick-start",permalink:"/docs/nudle/quick-start",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/nudle/quick-start.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/nudle/introduction"},next:{title:"Project structure",permalink:"/docs/nudle/project-structure"}},p={},u=[{value:"Setup",id:"setup",level:2},{value:"Building",id:"building",level:2},{value:"Version control",id:"version-control",level:2},{value:"Processes",id:"processes",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quick-start"},"Quick Start"),(0,a.kt)("p",null,"This project is built with ",(0,a.kt)("a",{parentName:"p",href:"https://vuejs.org"},"vue.js@2.5.16"),", ",(0,a.kt)("a",{parentName:"p",href:"https://electronjs.org"},"Electron.js@4.2.12")," and\nNode.js, it is highly recommended you have a considerate amount of knowledge and understanding in the aforementioned\nframeworks."),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# install dependencies\nyarn install\n\n# serve with hot reload at localhost:3000\nyarn run dev\n\n# run unit & end-to-end tests\nnpm test\n\n")),(0,a.kt)("h2",{id:"building"},"Building"),(0,a.kt)("p",null,"This project uses ",(0,a.kt)("a",{parentName:"p",href:"https://www.electron.build/"},"electron-builder")," to create production releases; ",(0,a.kt)("inlineCode",{parentName:"p"},".dmg")," on Mac, ",(0,a.kt)("inlineCode",{parentName:"p"},".exe")," on Windows and ",(0,a.kt)("inlineCode",{parentName:"p"},"tar.gz")," for Linux. You can customize the electron-builder configuration in the ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," build property."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Build the application for production\nyarn run build\n\n# Build application and deploy a release to github releases\nyarn run build:deploy\n\n")),(0,a.kt)("h2",{id:"version-control"},"Version control"),(0,a.kt)("p",null,"There are two main branches; ",(0,a.kt)("inlineCode",{parentName:"p"},"master")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"develop"),". You will most probably be working with other developers, it is very important to\nkeep a consistent workflow, as a result, there a few rules to to consider:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"NEVER")," push your code directly to the master branch. pushing to master branch is ",(0,a.kt)("strong",{parentName:"li"},"ONLY")," done by the team & project leads"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"ALWAYS")," create a new branch and name it according to the feature you are working on, so it makes it easier to an assigned personnel verify and approve your code."),(0,a.kt)("li",{parentName:"ol"},"Once you are ready to submit your code, create a ",(0,a.kt)("strong",{parentName:"li"},"pull request")," to the ",(0,a.kt)("strong",{parentName:"li"},"develop")," branch. The team leads will verify and approve the merge. Incase nobody is available to verify, you can merge it directly to the develop branch.")),(0,a.kt)("h2",{id:"processes"},"Processes"),(0,a.kt)("p",null,"The primary two process of the app the ",(0,a.kt)("a",{parentName:"p",href:"/docs/nudle/processes?#the-main-process"},"main process")," which can be considered the backbone of the application and the ",(0,a.kt)("a",{parentName:"p",href:"/docs/nudle/processes?#the-render-process"},"Render process")," which is much of the user interface or vue application. The main process code resides in ",(0,a.kt)("inlineCode",{parentName:"p"},"src/main")," and the render process ",(0,a.kt)("inlineCode",{parentName:"p"},"src/renderer")),(0,a.kt)("p",null,"When the app is launched, the main process is triggered and it runs the ",(0,a.kt)("inlineCode",{parentName:"p"},"createWindow()")," function to create a window and load the render process file (which is ",(0,a.kt)("inlineCode",{parentName:"p"},"https://localhost:3000")," in development and ",(0,a.kt)("inlineCode",{parentName:"p"},"dist/electron/index.html")," in production)."))}m.isMDXComponent=!0}}]);