"use strict";(self.webpackChunkenchird_wiki=self.webpackChunkenchird_wiki||[]).push([[3393],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,h=c["".concat(l,".").concat(m)]||c[m]||d[m]||o;return n?r.createElement(h,a(a({ref:t},u),{},{components:n})):r.createElement(h,a({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6785:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},assets:function(){return u},toc:function(){return d},default:function(){return m}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],s={sidebar_position:5,title:"Render process"},l="The Render process",p={unversionedId:"nudle/desktop/render-process",id:"nudle/desktop/render-process",title:"Render process",description:"The render process structure in src/renderer folder, is basically the set up of a standard Vue application.",source:"@site/docs/nudle/desktop/render-process.md",sourceDirName:"nudle/desktop",slug:"/nudle/desktop/render-process",permalink:"/enchird-wiki/docs/nudle/desktop/render-process",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Render process"},sidebar:"tutorialSidebar",previous:{title:"Main process",permalink:"/enchird-wiki/docs/nudle/desktop/main-process"},next:{title:"The start up process",permalink:"/enchird-wiki/docs/nudle/desktop/startup"}},u={},d=[{value:"Structure",id:"structure",level:2},{value:"Components",id:"components",level:3},{value:"Views",id:"views",level:3},{value:"Structure",id:"structure-1",level:4},{value:"1. auth folder",id:"1-auth-folder",level:5},{value:"2. setup folder",id:"2-setup-folder",level:5},{value:"3. main folder",id:"3-main-folder",level:5},{value:"Routing",id:"routing",level:2},{value:"Registering modules",id:"registering-modules",level:2},{value:"Using the Design Library",id:"using-the-design-library",level:2},{value:"Example usage",id:"example-usage",level:4},{value:"Internationalization (i18n)",id:"internationalization-i18n",level:2},{value:"Example usage",id:"example-usage-1",level:4},{value:"Using Ipc in the render process",id:"using-ipc-in-the-render-process",level:2},{value:"Example usage",id:"example-usage-2",level:4}],c={toc:d};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"the-render-process"},"The Render process"),(0,o.kt)("p",null,"The render process structure in ",(0,o.kt)("inlineCode",{parentName:"p"},"src/renderer")," folder, is basically the set up of a standard Vue application.  "),(0,o.kt)("h2",{id:"structure"},"Structure"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"\u251c\u2500 src\n   \u251c\u2500 renderer                \n   |  \u251c\u2500 assets       \n   |  \u251c\u2500 components     \n   |  \u251c\u2500 constants\n   |  \u251c\u2500 core\n   |  \u251c\u2500 locales\n   |  \u251c\u2500 modules\n   |  \u251c\u2500 router\n   |  \u251c\u2500 store\n   |  \u251c\u2500 styles\n   |  \u251c\u2500 views\n   |  |  \u251c\u2500 auth        \n   |  |  \u251c\u2500 main     \n   |  |  \u251c\u2500 setup      \n   |  |  \u251c\u2500 splashscreen.vue  \n   \u2502  \u251c\u2500 App.vue\n   \u2502  \u251c\u2500 index.html\n   \u2502  \u251c\u2500 index.ts\n   \u2502  \u251c\u2500 renderer.d.ts\n   \u2502  \u2514\u2500 tsconfig.json\n")),(0,o.kt)("h3",{id:"components"},"Components"),(0,o.kt)("p",null,"Components are reusable vue instances that can be imported anywhere in your vue application, all components should reside in ",(0,o.kt)("inlineCode",{parentName:"p"},"src/renderer/components"),". Naming conventions are important, it's recommended to name your component respective to it's use of view. you can put a group components it folders in the case if the components are related."),(0,o.kt)("h3",{id:"views"},"Views"),(0,o.kt)("p",null,"Views are the vue components with the user interfaces users interacts with. "),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"src/renderer/App.vue")," does not particularly have a user interface, think of it as the root component that injects the other pages and organizes them to permit routing to happen! That's how vue works. Well ",(0,o.kt)("inlineCode",{parentName:"p"},"App.vue")," being a component, means it has the same ",(0,o.kt)("a",{parentName:"p",href:"https://v3.vuejs.org/api/options-lifecycle-hooks.html#beforecreate"},"life cycle hooks"),". In the ",(0,o.kt)("inlineCode",{parentName:"p"},"App.vue"),"'s created hook, the default language is initialized\nand the listens to back up request from the main process.")),(0,o.kt)("h4",{id:"structure-1"},"Structure"),(0,o.kt)("p",null,"The view directory has 3 subdirectories ",(0,o.kt)("inlineCode",{parentName:"p"},"auth"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"setup")," and a ",(0,o.kt)("inlineCode",{parentName:"p"},"splashscreen.vue"),". This folder structure is organized in a way\nto group related views together making it easy to browse through."),(0,o.kt)("h5",{id:"1-auth-folder"},"1. auth folder"),(0,o.kt)("p",null,"Ths auth sub directory houses all views related to ",(0,o.kt)("strong",{parentName:"p"},"user authentication")," like the ",(0,o.kt)("inlineCode",{parentName:"p"},"Login.vue")," and  ",(0,o.kt)("inlineCode",{parentName:"p"},"Forgot-password.vue")," (which is yet to be created)"),(0,o.kt)("h5",{id:"2-setup-folder"},"2. setup folder"),(0,o.kt)("p",null,"When the app is launched for the fist time, the user has to configure the application for their use (i.e inputting: their account details, details about their shop and preferred language). There is a ",(0,o.kt)("inlineCode",{parentName:"p"},"Welcome.vue")," which is just a less-interactive welcome greeting screen and ",(0,o.kt)("inlineCode",{parentName:"p"},"set-up.vue")," is the view with the setup form. "),(0,o.kt)("h5",{id:"3-main-folder"},"3. main folder"),(0,o.kt)("p",null,"The rest of the application views are in this subfolder; the ",(0,o.kt)("strong",{parentName:"p"},"sales views"),", ",(0,o.kt)("strong",{parentName:"p"},"inventory views")," etc. The main component here is the ",(0,o.kt)("inlineCode",{parentName:"p"},"Main.vue")," being the file with child routes to the other views in the main directory. It's UI is basically a side navigation with a section serving as the router outlet for the\nother view"),(0,o.kt)("h2",{id:"routing"},"Routing"),(0,o.kt)("p",null,"When you register in new view be it in the ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"auth")," folders, for a user to be able to navigate to this view, you will need to define the route path in the router file ",(0,o.kt)("inlineCode",{parentName:"p"},"src/router/index.ts"),". "),(0,o.kt)("h2",{id:"registering-modules"},"Registering modules"),(0,o.kt)("p",null,"This project uses many packages like ",(0,o.kt)("a",{parentName:"p",href:"https://momentjs.com"},"moment"),", ",(0,o.kt)("a",{parentName:"p",href:"https://lodash.com"},"lodash"),". You can install other dependencies you see fit, make sure you follow our ",(0,o.kt)("a",{parentName:"p",href:"/docs/guide-to-using-packages/"},"guide for using packages"),".\nAfter installing a vue plugin, for you to be able to use it the plugin, you will have to register it in ",(0,o.kt)("inlineCode",{parentName:"p"},"src/renderer/modules/index.ts"),". For example if you wish to use the vue js plugin for ripple effect ",(0,o.kt)("inlineCode",{parentName:"p"},"vue-material-design-ripple"),". We will register it as a vue directive."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"title=src/renderer/modules/index.ts",title:"src/renderer/modules/index.ts"},"// Importing package form node_modules\nimport 'vue-material-design-ripple/dist/vue-material-design-ripple.css'\nimport Ripple from 'vue-material-design-ripple'\n\n// add it to the registerModule function\nexport default function registerModules(App: App) {\n    ...\n    App.directive('ripple', Ripple)\n}\n")),(0,o.kt)("h2",{id:"using-the-design-library"},"Using the Design Library"),(0,o.kt)("p",null,"Design component libraries are pre-made UI components that facilitate designing views. Nudle use ",(0,o.kt)("a",{parentName:"p",href:"https://element-plus.org/en-US/component/button.html"},"Element UI Plus")," and ",(0,o.kt)("a",{parentName:"p",href:"https://next.antdv.com/components/overview"},"Ant Design")," which is currently deprecated, Ant Design will be remove completely in subsequent versions, We recommend you use Element UI +. Element UI Plus provides many pre-made components, form controls, date pickers, data tables etc.\nBefore using a component we have to import the module like any other module. For example if we want to use the input control provider by element UI, we would have to import the input module in ",(0,o.kt)("inlineCode",{parentName:"p"},"src/renderer/modules/index.ts")),(0,o.kt)("h4",{id:"example-usage"},"Example usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { ElInput } from 'element-ui';\n\nexport default function registerModules(App: App) {\n  ...\n  App.use(ElInput)\n}\n\n\n// Using the input in your .vue files\n<el-input :placeholder=\"$t('enter_username')\" v-model.trim=\"loginForm.username\"></el-input>\n\n")),(0,o.kt)("h2",{id:"internationalization-i18n"},"Internationalization (i18n)"),(0,o.kt)("p",null,"As of now Nudle is multi-lingual, supporting three langues; English, French and Spanish. The language files are located in ",(0,o.kt)("inlineCode",{parentName:"p"},"src/renderer/locales/"),"  Nudle uses a third party vue library ",(0,o.kt)("a",{parentName:"p",href:"https://kazupon.github.io/vue-i18n/guide/formatting.html#named-formatting"},"Vue-i18n")," to format language strings."),(0,o.kt)("h4",{id:"example-usage-1"},"Example usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=src/renderer/locales/en.json",title:"src/renderer/locales/en.json"},'{\n    ...\n    "add_items_to_order": "Please add items to complete order"\n    ...\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"// In your .vue template\n<p>{{ $t('add_items_to_order') }}</p>\n// Or\n<p v-html=\"$t('add_items_to_order')\"></p>\n\n\n// In your vue script\nexport defineComponent({\n    ...\n    methods: {\n        showAlert() {\n            window.alert(this.$t('add_items_to_order'));\n        }\n    }\n})\n")),(0,o.kt)("p",null,"Learn more about ",(0,o.kt)("a",{parentName:"p",href:"https://kazupon.github.io/vue-i18n/guide/formatting.html#named-formatting"},"Vue-i18n")),(0,o.kt)("h2",{id:"using-ipc-in-the-render-process"},"Using Ipc in the render process"),(0,o.kt)("p",null,"To communicate with the main process, the render process uses ",(0,o.kt)("a",{parentName:"p",href:"https://www.electronjs.org/docs/latest/api/ipc-renderer"},"IpcRenderer"),". Don't bother importing ",(0,o.kt)("inlineCode",{parentName:"p"},"ipcRenderer")," from electron, ipcRendere has already being provided to the vue application. You will just need to inject it in your component."),(0,o.kt)("h4",{id:"example-usage-2"},"Example usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// Your .vue file script, inject $ipcRenderer\nexport default defineComponent({\n  name: 'component_name',\n  inject: ['$ipcRenderer'],   // Make sure to inject it before using it else you will get errors\n  created() {\n    // Listening to the 'APP::BACKUP_REQUEST' event from the main process\n    this.$ipcRenderer.on('APP::BACKUP_REQUEST', (event, args) => {\n        console.log('New APP::BACKUP_REQUEST event!')\n    });\n  }\n});\n")))}m.isMDXComponent=!0}}]);